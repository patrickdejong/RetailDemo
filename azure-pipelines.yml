trigger:
- master

pool:
  vmImage: ubuntu-latest

# Build projects
stages:
- stage: Build
  jobs:
  - job: BuildAllProjects
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build' 
        includeRootFolder: false 
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: buildArtifact

- stage: Development
  jobs:
    - job: DeployUsingArmTemplate
      steps:
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Visual Studio Enterprise-abonnement – MPN(ff29f8c3-ba94-4171-b102-02a5256b1419)'
          subscriptionId: 'ff29f8c3-ba94-4171-b102-02a5256b1419'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'ArmResourceGroup'
          location: 'West Europe'
          templateLocation: 'Linked artifact'
          csmFile: '**/*/azuredeploy.json'
          csmParametersFile: '**/*/azuredeploy.parameters.json'
          deploymentMode: 'Incremental'
      - task: AzureWebApp@1
        inputs:
          azureSubscription: 'Visual Studio Enterprise-abonnement – MPN(ff29f8c3-ba94-4171-b102-02a5256b1419)'
          appType: 'webApp'
          appName: 'RestApi17022023'
          package: '$(System.DefaultWorkingDirectory)/**/RestAPI/**/*.zip'
          deploymentMethod: 'auto'